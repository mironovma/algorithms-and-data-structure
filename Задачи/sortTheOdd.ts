/**
 * Задача:
 *
 * Дан массив чисел. Нужно отсортировать его так, чтобы нечетные
 * числа были в возрастающем порядке, а четные не меняли
 * своей позиции в массиве (index).
 *
 * Например:
 *
 * [7, 1]  =>  [1, 7]
 * [5, 8, 6, 3, 4]  =>  [3, 8, 6, 5, 4]
 * [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]  =>  [1, 8, 3, 6, 5, 4, 7, 2, 9, 0]
 */

const sortTheOdd = (arr: number[]): number[] => {
  // Создаем новый массив в котором будут только нечетные числа из исходного массива
  const oddArr = arr.filter((num) => num % 2 !== 0);
  // Сортируем этот массив в порядке возрастания
  oddArr.sort((a, b) => a - b);

  // Объявляем эту переменную, которую будем использовать для отслеживания текущей позиции в oddArr
  let oddIndex = 0;
  // Создаем новый массив, который будет содержать в себе результат
  const result = arr.map((num) => {
    // Если элемент нечетный, заменяем его на следующий элемент из отсортированного oddArr
    if (num % 2 !== 0) {
      const sotredNum = oddArr[oddIndex];
      oddIndex++;
      return sotredNum;
    }
    // Если элемент четный, оставляем его без изменений
    return num;
  });

  // Возвращаем результат
  return result;
};

console.log(sortTheOdd([5, 3, 2, 8, 1, 4, 10, 11, 3, 0]));
