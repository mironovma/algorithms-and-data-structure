/**
 * Дан массив целых чисел.
 * Задача взять этот массив и найти индекс N, в котором сумма
 * целых чисел слева от N равна сумме целых чисел справа от N.
 * Если такого индекса нет, то вернуть -1.
 *
 * Проще говоря. Нужно найти индекс элемента, который делит
 * массив на две части с одинаковой суммой.
 * [1, 2, 3, 4, 3, 2, 1] // Ответ: индекс № 3 (элемент = 4), т.к.
 * сумма слева от этого индекса (1 + 2 + 3) равна сумме элементов справа (3 + 2 + 1).
 */

const equalSidesOfAnArr = (arr: number[]): number => {
  // Хранит сумму элементов слева от текущего индекса. Изначально 0.
  let leftSum = 0;
  // Хранит сумму элементов справа от текущего индекса. Изначально сумма всех элементов в массиве.
  let rightSum = arr.reduce((acc, num) => acc + num, 0);

  /**
   * Проходимся по каждому элементу массива.
   * На каждом шаге вычитаем текущий элемент из rightSum,
   * чтобы получить сумму элементов справа от текущего индекса.
   */
  for (let i = 0; i < arr.length; i++) {
    rightSum -= arr[i];

    /**
     * Затем проверяем, равны ли значения leftSum и rightSum.
     * Если да, то мы нашли ответ и возвращаем текущий индекс.
     */
    if (leftSum === rightSum) {
      return i;
    }

    /**
     * Иначе добавляем текущий элемент к leftSum,
     * чтобы продолжить поиск.
     */
    leftSum += arr[i];
  }

  /**
   * Если ответа нет, то возвращаем -1.
   */
  return -1;
};

console.log(equalSidesOfAnArr([1, 2, 3, 4, 3, 2, 1])); // Ответ: 3
/**
 * Потому что сумма левой части от этого индекса (1, 2, 3)
 * и сумма правой стороны индекса (3, 2, 1) обе равны 6.
 */
